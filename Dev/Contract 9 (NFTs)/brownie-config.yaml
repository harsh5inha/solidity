dependencies:
  # - <organization/repo>@<version>
  - OpenZeppelin/openzeppelin-contracts@3.4.0
  - smartcontractkit/chainlink-brownie-contracts@1.1.1
compiler:
  solc:
    remappings:
    # below we're telling brownie, whenever you see the word "openzeppelin" in our contracts, sub in the github repo to the right
    # We have to do this because otherwise in our contracts, brownie won't know how to pull from npm
      - '@openzeppelin=OpenZeppelin/openzeppelin-contracts@3.4.0'
      - '@chainlink=smartcontractkit/chainlink-brownie-contracts@1.1.1'
dotenv: .env
networks:
  default: development
  # Using Rinkeby because the testnet for OpenSea only works with Rinkeby right now
  rinkeby:
    vrf_coordinator: '0xb3dCcb4Cf7a26f6cf6B120Cf5A73875B7BBc655B'
    link_token: '0x01BE23585060835E02B77ef475b0Cc51aA1e0709'
    keyhash: '0x2ed0feb3e7fd2022120aa84fab1945545a9f2ffc9076fd6156fa96eaff4c1311'
    fee: 100000000000000000 # 0.1
    verify: True
  development:
    # We can use the same keyhash on a local chain because the way it works is the mock VRF contract will check to see that their hash matches the keyhash (I think)
    keyhash: '0x2ed0feb3e7fd2022120aa84fab1945545a9f2ffc9076fd6156fa96eaff4c1311'
    fee: 100000000000000000 #0.1
    verify: False
wallets:
  from_key: ${PRIVATE_KEY}